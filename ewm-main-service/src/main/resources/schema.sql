DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS compilations_events;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS users;


CREATE TABLE IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
name VARCHAR(255) NOT NULL,
email VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS locations (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
lat FLOAT NOT NULL,
lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
initiator_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
category_id BIGINT REFERENCES categories (id) ON DELETE RESTRICT,
confirmed_requests INT NOT NULL,
location_id BIGINT NOT NULL REFERENCES locations (id),
title VARCHAR(120) NOT NULL,
annotation VARCHAR(2000) NOT NULL,
description VARCHAR(7000) NOT NULL,
state VARCHAR(30) NOT NULL,
event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
published_on TIMESTAMP WITHOUT TIME ZONE,
participant_limit INT NOT NULL,
paid BOOLEAN NOT NULL,
request_moderation BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS requests(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL ,
requester_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
event_id BIGINT REFERENCES events (id) ON DELETE CASCADE,
status VARCHAR(50) NOT NULL,
created TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL ,
title VARCHAR(50) NOT NULL,
pinned BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
events_id BIGINT REFERENCES events (id) ON DELETE CASCADE,
compilation_id BIGINT REFERENCES compilations (id) ON DELETE CASCADE,
CONSTRAINT PK_EVENTS_COMPILATIONS PRIMARY KEY(events_id, compilation_id)
);